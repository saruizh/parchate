version: "3.9"

services:

####Agregando microservicios:

  #Microservicio comentarios_ms Ruby
  comentarios_ms:
    build: ./comentarios_ms
    command: bash -c "rm -f comentarios_ms/tmp/pids/server.pid && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - .:/comentarios_ms/app
    ports:
      - "3001:3000"
    depends_on:
      - comentarios_db
   #Base de datos en Mongo para microservicio Ruby
  comentarios_db:
    image: "mongo:latest"
    ports:
      - "27017:27017"
 
      
  
  #Microservicio planes hecho en Python
  # planes_ms:
  #   build: ./planes_ms
  #   container_name: planes_ms
  #   command: python manage.py runserver 0.0.0.0:8000
  #   volumes:
  #     - .:/planes_ms/code
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - POSTGRES_NAME=planes-db
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=123456
  #   depends_on:
  #     - planes_db

  # #Base de datos en postgreSQL para microservicio Python
  # planes_db:
  #   image: postgres:latest
  #   restart: always
  #   container_name: planes_db
  #   volumes:
  #     - ./data/db:/var/lib/postgresql/data
  #   environment:
  #     - DATABASE_HOST=127.0.0.1
  #     - POSTGRES_DB=planes-db
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=123456
  #   ports:
  #     - "5433:5433" #Se cambia de puerto en base de datos de microservicio

  
#Administrador de Base de datos en postgreSQL para microservicio Python
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "80:80"
    depends_on:
      - users_db


  #Microservicio vaca hecho en java
  vaca_ms:
    container_name: vaca_ms
    image: vaca_app:1.0.0
    build: ./vaca_ms
    ports:
      - 8080:8080    
    environment:
      - DATABASE_URL=jdbc:postgresql://vaca_db:5432/postgres
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=vaca1123581321
    depends_on:
      - vaca_db
  #Base de datos en postgreSQL para microservicio java
  vaca_db:
    container_name: vaca_db
    image: postgres:12
    ports:
      - 5433:5433
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: vaca1123581321
      POSTGRES_DB: vaca

  #Microservicio users hecho en Javascript
  # users_ms:
  #   container_name: users_ms
  #   restart: always
  #   build:
  #     context: ./vsuarios_ms
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - users_db
  #   networks:
  #     - users-network
  # #Base de datos en postgreSQL para microservicio en Javascript
  # users_db:
  #   container_name: users_db
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - users-network

  ##Creación de API_Gateway 
  api_gateway:
    build: ./graphql
    container_name: api_gateway
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/graphql/code
    environment:
      - POSTGRES_NAME=users-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - vaca_ms_URL=http://host.docker.internal:8080/parchate/vaca/
      - COMENTARIOS_MS_URL=http://host.docker.internal:3001/comentarios/
    #   - USERS_MS_URL=http://host.docker.internal:3000/parchate/user/
    #   - PLANES_MS_URL=http://host.docker.internal:8000/parchate/ms-planes/
    depends_on:
      - users_db
      - vaca_ms
      - comentarios_ms
      #- users_ms          
      
  #Base de datos en postgreSQL para microservicio Python
  users_db:
    image: postgres:latest
    container_name: users_db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432" #Se cambia de puerto en base de datos de microservicio      
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_DB=users-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456

  ##Creación de cola de mensajería
#   rabbitmq:
#     container_name: rabbitmq
#     image: rabbitmq:3-management
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#     environment:
#       RABBITMQ_DEFAULT_USER: saruizh
#       RABBITMQ_DEFAULT_PASS: 1123581321

  mobile_proxy:
    build: ./proxy_mobile
    ports:
      - "90:90"
    volumes:
      - ./proxy_mobile/app.conf:/etc/nginx/conf.d/default.conf

networks:
  users-network:
    driver: bridge


#Poner el api gateway en la red



